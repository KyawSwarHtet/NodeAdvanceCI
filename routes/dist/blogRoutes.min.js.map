{"version":3,"sources":["blogRoutes.js"],"names":["mongoose","require","requireLogin","module","cleanCache","app","get","req","res","blog","regeneratorRuntime","async","_context","prev","next","awrap","model","findOne","_user","user","id","_id","exports","params","sent","send","stop","blogs","_context2","Blog","find","cache","key","_req$body","title","content","_context3","body","save","t0"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YACnBC,aAAeD,QAAQ,+BADvBD,WAAWC,QAAQ,6BACnBC,KAAAA,SAAeD,MAAQ,QAC7BE,OAAMC,QAAaH,SAAAA,GAKjBI,EAAIC,IAAI,iBAAkBJ,aAAc,SAAOK,EAAKC,GAAZ,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,MAHpBC,KAAMC,QAA5B,CAKMC,MAAOX,EAAIY,KAAKC,GAHhBC,IAACC,EAAPC,OAAiBH,MACyB,KAAA,EAHhCX,EAGgCG,EAAAY,KAAAhB,EAAAiB,KAAAhB,GAAA,KAAA,EAAA,IAAA,MAAA,OAAAG,EAAAc,YAAArB,EAAAC,IAAA,aAAAJ,aAAA,SAAAK,EAAAC,GAAA,IAAAmB,EAAA,OAAAjB,mBAAAC,MAAA,SAAAiB,GAAA,OAAA,OAAAA,EAAAf,KAAAe,EAAAd,MAAA,KAAA,EAAA,OAAAc,EAAAd,KAAA,EAAAJ,mBAAAK,MAAAc,KAAAC,KAAA,CAAAZ,MAAAX,EAAAY,KAAAC,KAAAW,MAAA,CAAAC,IAAAzB,EAAAY,KAAAC,MAAA,KAAA,EAAAO,EAAAC,EAAAJ,KAGpCH,QAAAA,IAAAA,wBAF8Bb,EAAAiB,KAAbE,GADmB,KAAA,EAAA,IAAA,MAAA,OAAAC,EAAAF,YAChCjB,EAAAA,KAAAA,aADgCP,aAAAE,WAAA,SAAAG,EAAAC,GAAA,IAAAyB,EAAAC,EAAAC,EAAA1B,EAAA,OAAAC,mBAAAC,MAAA,SAAAyB,GAAA,OAAA,OAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,KAAA,EAAA,OAAAmB,EAMtC1B,EAAA8B,KAAA7B,EANsCyB,EAMtCzB,MAAIiB,EANkCQ,EAMlCR,QANkChB,EAAA,IAAAoB,KAAA,CAAAK,MAAAA,EAAAC,QAAAA,EAAAjB,MAAAX,EAAAY,KAAAC,KAAAgB,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAAAJ,mBAAAK,MAShCN,EAAA6B,QATgC,KAAA,EASJ9B,EAAAiB,KAAAhB,GATI2B,EAAAtB,KAAA,GAAA,MAAA,KAAA,EAAAsB,EAAAvB,KAAA,EAAAuB,EAAAG,GAAAH,EAAA,MAAA,GASJ5B,EAAAiB,KAAA,IAAAW,EAAAG,IATI,KAAA,GAAA,IAAA,MAAA,OAAAH,EAAAV,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"blogRoutes.min.js","sourcesContent":["const mongoose = require(\"mongoose\");\r\nconst requireLogin = require(\"../middlewares/requireLogin\");\r\nconst cleanCache = require(\"../middlewares/cleanCache\");\r\n\r\nconst Blog = mongoose.model(\"Blog\");\r\n\r\nmodule.exports = (app) => {\r\n  app.get(\"/api/blogs/:id\", requireLogin, async (req, res) => {\r\n    const blog = await Blog.findOne({\r\n      _user: req.user.id,\r\n      _id: req.params.id,\r\n    });\r\n\r\n    res.send(blog);\r\n  });\r\n\r\n  app.get(\"/api/blogs\", requireLogin, async (req, res) => {\r\n    const blogs = await Blog.find({ _user: req.user.id }).cache({\r\n      key: req.user.id,\r\n    });\r\n    console.log(\"Serving from MongoDB\");\r\n    res.send(blogs);\r\n  });\r\n\r\n  app.post(\"/api/blogs\", requireLogin, cleanCache, async (req, res) => {\r\n    const { title, content } = req.body;\r\n\r\n    const blog = new Blog({\r\n      title,\r\n      content,\r\n      _user: req.user.id,\r\n    });\r\n\r\n    try {\r\n      await blog.save();\r\n      res.send(blog);\r\n    } catch (err) {\r\n      res.send(400, err);\r\n    }\r\n    //clear cache after createing new blog\r\n  });\r\n};\r\n"]}