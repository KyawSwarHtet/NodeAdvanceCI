{"version":3,"sources":["blogRoutes.js"],"names":["mongoose","require","requireLogin","cleanCache","Blog","model","module","exports","app","get","req","res","findOne","_user","user","id","_id","params","blog","send","find","cache","key","blogs","console","log","post","body","title","content","save"],"mappings":";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,6BAAD,CAA5B;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,2BAAD,CAA1B;;AAEA,IAAMG,IAAI,GAAGJ,QAAQ,CAACK,KAAT,CAAe,MAAf,CAAb;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAS;AACxBA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0BP,YAA1B,EAAwC,iBAAOQ,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACnBP,IAAI,CAACQ,OAAL,CAAa;AAC9BC,cAAAA,KAAK,EAAEH,GAAG,CAACI,IAAJ,CAASC,EADc;AAE9BC,cAAAA,GAAG,EAAEN,GAAG,CAACO,MAAJ,CAAWF;AAFc,aAAb,CADmB;;AAAA;AAChCG,YAAAA,IADgC;AAMtCP,YAAAA,GAAG,CAACQ,IAAJ,CAASD,IAAT;;AANsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxC;AASAV,EAAAA,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBP,YAAtB,EAAoC,kBAAOQ,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACdP,IAAI,CAACgB,IAAL,CAAU;AAAEP,cAAAA,KAAK,EAAEH,GAAG,CAACI,IAAJ,CAASC;AAAlB,aAAV,EAAkCM,KAAlC,CAAwC;AAC1DC,cAAAA,GAAG,EAAEZ,GAAG,CAACI,IAAJ,CAASC;AAD4C,aAAxC,CADc;;AAAA;AAC5BQ,YAAAA,KAD4B;AAIlCC,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAd,YAAAA,GAAG,CAACQ,IAAJ,CAASI,KAAT;;AALkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;AAQAf,EAAAA,GAAG,CAACkB,IAAJ,CAAS,YAAT,EAAuBxB,YAAvB,EAAqCC,UAArC,EAAiD,kBAAOO,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACpBD,GAAG,CAACiB,IADgB,EACvCC,KADuC,aACvCA,KADuC,EAChCC,OADgC,aAChCA,OADgC;AAGzCX,YAAAA,IAHyC,GAGlC,IAAId,IAAJ,CAAS;AACpBwB,cAAAA,KAAK,EAALA,KADoB;AAEpBC,cAAAA,OAAO,EAAPA,OAFoB;AAGpBhB,cAAAA,KAAK,EAAEH,GAAG,CAACI,IAAJ,CAASC;AAHI,aAAT,CAHkC;AAAA;AAAA;AAAA,4CAUvCG,IAAI,CAACY,IAAL,EAVuC;;AAAA;AAW7CnB,YAAAA,GAAG,CAACQ,IAAJ,CAASD,IAAT;AAX6C;AAAA;;AAAA;AAAA;AAAA;AAa7CP,YAAAA,GAAG,CAACQ,IAAJ,CAAS,GAAT;;AAb6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjD;AAiBD,CAnCD","sourcesContent":["const mongoose = require(\"mongoose\");\r\nconst requireLogin = require(\"../middlewares/requireLogin\");\r\nconst cleanCache = require(\"../middlewares/cleanCache\");\r\n\r\nconst Blog = mongoose.model(\"Blog\");\r\n\r\nmodule.exports = (app) => {\r\n  app.get(\"/api/blogs/:id\", requireLogin, async (req, res) => {\r\n    const blog = await Blog.findOne({\r\n      _user: req.user.id,\r\n      _id: req.params.id,\r\n    });\r\n\r\n    res.send(blog);\r\n  });\r\n\r\n  app.get(\"/api/blogs\", requireLogin, async (req, res) => {\r\n    const blogs = await Blog.find({ _user: req.user.id }).cache({\r\n      key: req.user.id,\r\n    });\r\n    console.log(\"Serving from MongoDB\");\r\n    res.send(blogs);\r\n  });\r\n\r\n  app.post(\"/api/blogs\", requireLogin, cleanCache, async (req, res) => {\r\n    const { title, content } = req.body;\r\n\r\n    const blog = new Blog({\r\n      title,\r\n      content,\r\n      _user: req.user.id,\r\n    });\r\n\r\n    try {\r\n      await blog.save();\r\n      res.send(blog);\r\n    } catch (err) {\r\n      res.send(400, err);\r\n    }\r\n    //clear cache after createing new blog\r\n  });\r\n};\r\n"],"file":"blogRoutes.dev.js"}