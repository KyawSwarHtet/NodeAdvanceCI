{"version":3,"sources":["index.js"],"names":["express","require","mongoose","cookieSession","passport","bodyParser","keys","Promise","global","connect","mongoURI","useNewUrlParser","useUnifiedTopology","app","use","json","maxAge","cookieKey","initialize","session","includes","process","env","NODE_ENV","path","get","req","res","sendFile","resolve","PORT","listen","console","log"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAME,aAAa,GAAGF,OAAO,CAAC,gBAAD,CAA7B;;AACA,IAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMI,UAAU,GAAGJ,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMK,IAAI,GAAGL,OAAO,CAAC,eAAD,CAApB;;AAEAA,OAAO,CAAC,eAAD,CAAP;;AACAA,OAAO,CAAC,eAAD,CAAP;;AACAA,OAAO,CAAC,qBAAD,CAAP;;AACAA,OAAO,CAAC,kBAAD,CAAP;;AAEAC,QAAQ,CAACK,OAAT,GAAmBC,MAAM,CAACD,OAA1B;AACAL,QAAQ,CAACO,OAAT,CAAiBH,IAAI,CAACI,QAAtB,EAAgC;AAC9BC,EAAAA,eAAe,EAAE,IADa;AAE9BC,EAAAA,kBAAkB,EAAE;AAFU,CAAhC;AAKA,IAAMC,GAAG,GAAGb,OAAO,EAAnB;AAEAa,GAAG,CAACC,GAAJ,CAAQT,UAAU,CAACU,IAAX,EAAR;AACAF,GAAG,CAACC,GAAJ,CACEX,aAAa,CAAC;AACZa,EAAAA,MAAM,EAAE,KAAK,EAAL,GAAU,EAAV,GAAe,EAAf,GAAoB,IADhB;AAEZV,EAAAA,IAAI,EAAE,CAACA,IAAI,CAACW,SAAN;AAFM,CAAD,CADf;AAMAJ,GAAG,CAACC,GAAJ,CAAQV,QAAQ,CAACc,UAAT,EAAR;AACAL,GAAG,CAACC,GAAJ,CAAQV,QAAQ,CAACe,OAAT,EAAR;;AAEAlB,OAAO,CAAC,qBAAD,CAAP,CAA+BY,GAA/B;;AACAZ,OAAO,CAAC,qBAAD,CAAP,CAA+BY,GAA/B;;AAEA,IAAI,CAAC,YAAD,EAAeO,QAAf,CAAwBC,OAAO,CAACC,GAAR,CAAYC,QAApC,CAAJ,EAAmD;AACjDV,EAAAA,GAAG,CAACC,GAAJ,CAAQd,OAAO,UAAP,CAAe,cAAf,CAAR;;AAEA,MAAMwB,IAAI,GAAGvB,OAAO,CAAC,MAAD,CAApB;;AACAY,EAAAA,GAAG,CAACY,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,IAAAA,GAAG,CAACC,QAAJ,CAAaJ,IAAI,CAACK,OAAL,CAAa,QAAb,EAAuB,OAAvB,EAAgC,YAAhC,CAAb;AACD,GAFD;AAGD;;AAED,IAAMC,IAAI,GAAGT,OAAO,CAACC,GAAR,CAAYQ,IAAZ,IAAoB,IAAjC;AACAjB,GAAG,CAACkB,MAAJ,CAAWD,IAAX,EAAiB,YAAM;AACrBE,EAAAA,OAAO,CAACC,GAAR,sBAAiCH,IAAjC;AACD,CAFD","sourcesContent":["const express = require(\"express\");\r\nconst mongoose = require(\"mongoose\");\r\nconst cookieSession = require(\"cookie-session\");\r\nconst passport = require(\"passport\");\r\nconst bodyParser = require(\"body-parser\");\r\nconst keys = require(\"./config/keys\");\r\n\r\nrequire(\"./models/User\");\r\nrequire(\"./models/Blog\");\r\nrequire(\"./services/passport\");\r\nrequire(\"./services/cache\");\r\n\r\nmongoose.Promise = global.Promise;\r\nmongoose.connect(keys.mongoURI, {\r\n  useNewUrlParser: true,\r\n  useUnifiedTopology: true,\r\n});\r\n\r\nconst app = express();\r\n\r\napp.use(bodyParser.json());\r\napp.use(\r\n  cookieSession({\r\n    maxAge: 30 * 24 * 60 * 60 * 1000,\r\n    keys: [keys.cookieKey],\r\n  })\r\n);\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\n\r\nrequire(\"./routes/authRoutes\")(app);\r\nrequire(\"./routes/blogRoutes\")(app);\r\n\r\nif ([\"production\"].includes(process.env.NODE_ENV)) {\r\n  app.use(express.static(\"client/build\"));\r\n\r\n  const path = require(\"path\");\r\n  app.get(\"*\", (req, res) => {\r\n    res.sendFile(path.resolve(\"client\", \"build\", \"index.html\"));\r\n  });\r\n}\r\n\r\nconst PORT = process.env.PORT || 5000;\r\napp.listen(PORT, () => {\r\n  console.log(`Listening on port`, PORT);\r\n});\r\n"],"file":"index.dev.js"}